std::string closestString(std::string s, int k) {

  std::vector<int> count(26, 0);
  for (int i = 0; i < s.size(); i++) {
    count[s[i] - 'a']++;
  }

  std::vector<char> result(s.size(), 0);
  char smallest = 'z';
  for (int it = 0; it < k; it++) {
    int current = 0;
    for (int i = 1; i < 26; i++) {
      if (count[i] > count[current]) {
        current = i;
      }
    }
    for (int i = 0; i < s.size(); i++) {
      if (s[i] - 'a' == current) {
        result[i] = s[i];
      }
    }
    if (current < smallest - 'a') {
      smallest = current + 'a';
    }
    count[current] = 0;
  }

  for (int i = 0; i < s.size(); i++) {
    if (count[s[i] - 'a'] == 0) {
    if (count[s[i] - 'a'] > 0) {
      result[i] = smallest;
    }
  }

  return std::string(result.begin(), result.end());
}

